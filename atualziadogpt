function analisarEInserirLinha() {
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  var range = sheet.getDataRange();
  var values = range.getValues();
  var fontWeights = range.getFontWeights(); // Obtém os pesos das fontes
  var backgrounds = range.getBackgrounds(); // Obtém as cores de fundo das células

  Logger.log('Obtendo intervalos nomeados...');
  var namedRanges = SpreadsheetApp.getActiveSpreadsheet().getNamedRanges();
  var intervalos = {};
  
  // Mapeia os intervalos nomeados para um objeto
  namedRanges.forEach(function(namedRange) {
    intervalos[namedRange.getName()] = namedRange.getRange();
  });

  var intervaloIniciar = intervalos['INICIAR'];
  var intervaloParar = intervalos['PARAR'];

  if (!intervaloIniciar || !intervaloParar) {
    var msg = !intervaloIniciar ? 'Intervalo nomeado "INICIAR" não encontrado.' : 'Intervalo nomeado "PARAR" não encontrado.';
    Logger.log(msg);
    Browser.msgBox(msg);
    return;
  }

  var colunaIniciar = intervaloIniciar.getColumn() - 1;
  var linhaInicial = intervaloIniciar.getRow() + 2;
  var linhaParar = intervaloParar.getRow();
  var numColunas = sheet.getMaxColumns();

  Logger.log('Iniciando o processamento das linhas de ' + linhaInicial + ' a ' + linhaParar);

  var tempoInicio = new Date().getTime();

  for (var linhaAtual = linhaParar; linhaAtual >= linhaInicial; linhaAtual--) {
    if (sheet.isRowHiddenByUser(linhaAtual) || sheet.isRowHiddenByFilter(linhaAtual)) {
      Logger.log('Linha ' + linhaAtual + ' está oculta ou filtrada. Pulando.');
      continue;
    }

    var valorReferencia = values[linhaAtual - 1][colunaIniciar];
    if (valorReferencia === 0) {
      Logger.log('Valor de referência é 0. Pulando linha.');
      continue;
    }

    var colunaAtual = colunaIniciar + 1;
    var primeiraColunaNegrito = -1;
    var ultimaColunaDiferenca = -1;
    var diferencas = [];
    var valoresNegrito = [];
    var backgroundsNovaLinha = Array(numColunas).fill(''); // Cores de fundo para a nova linha

    while (colunaAtual < values[linhaAtual - 1].length) {
      var valorAtual = values[linhaAtual - 1][colunaAtual];
      var isNegrito = fontWeights[linhaAtual - 1][colunaAtual] === 'bold';
      var bgOriginal = backgrounds[linhaAtual - 1][colunaAtual];

      if (valorAtual === '') {
        Logger.log('Encontrada célula vazia na coluna ' + (colunaAtual + 1) + '. Parando.');
        break;
      }

      if (valorAtual !== valorReferencia && !isNegrito) {
        diferencas.push(colunaAtual);
        ultimaColunaDiferenca = colunaAtual;
        Logger.log('Valor diferente encontrado na coluna ' + (colunaAtual + 1) + '.');
      }

      if (isNegrito) {
        valoresNegrito.push({ coluna: colunaAtual + 1, valor: valorAtual });
        if (primeiraColunaNegrito === -1) {
          primeiraColunaNegrito = colunaAtual;
        }
        Logger.log('Valor em negrito encontrado na coluna ' + (colunaAtual + 1) + ': ' + valorAtual);
      }

      colunaAtual++;
    }

    if (diferencas.length > 0 || valoresNegrito.length > 0) {
      Logger.log('Preparando dados para nova linha abaixo da linha ' + linhaAtual);
      var novaLinha = Array(numColunas).fill('');
      novaLinha[0] = values[linhaAtual - 1][0] + '_1';

      // Adiciona valores de diferença
      for (var i = 1; i <= ultimaColunaDiferenca; i++) {
        if (diferencas.includes(i)) {
          var valorAtual = values[linhaAtual - 1][i];
          var valorDiferenca = Math.max(0, valorAtual - valorReferencia);
          novaLinha[i] = valorDiferenca;
          backgroundsNovaLinha[i] = '#FFFF00'; // Cor de fundo amarelo para células com valor diferente
          Logger.log('Adicionando diferença na coluna ' + (i + 1) + ': ' + valorDiferenca);
        }
      }

      // Adiciona valores negrito
      valoresNegrito.forEach(function(negrito) {
        novaLinha[negrito.coluna - 1] = negrito.valor;
        if (negrito.valor !== 0) {
          backgroundsNovaLinha[negrito.coluna - 1] = '#FFFF00'; // Cor de fundo amarelo para valores negrito
        }
        Logger.log('Valor negrito adicionado na coluna ' + negrito.coluna + ': ' + negrito.valor);
      });

            // Atualiza a célula original com o valor da célula de referência
      sheet.getRange(linhaAtual, colunaIniciar + 1).setValue(valorReferencia);

      // Preencher com 0 entre a célula de referência e a última coluna com valor inserido
      for (var col = colunaIniciar; col <= ultimaColunaDiferenca; col++) {
        if (novaLinha[col] === '') {
          novaLinha[col] = 0; // Adiciona 0 nas células vazias
          // Não altera a cor de fundo para 0
          Logger.log('Adicionando 0 na coluna ' + (col + 1));
        }
      }

      // Insere uma nova linha e define os valores e cores de fundo imediatamente
      sheet.insertRowAfter(linhaAtual);
      var novaLinhaRange = sheet.getRange(linhaAtual + 1, 1, 1, numColunas);
      novaLinhaRange.setValues([novaLinha]);
      novaLinhaRange.setBackgrounds([backgroundsNovaLinha]);

    }
  }

  var tempoFim = new Date().getTime();
  var tempoExecucao = (tempoFim - tempoInicio) / 1000;
  var minutos = Math.floor(tempoExecucao / 60);
  var segundos = Math.round(tempoExecucao % 60);

  Logger.log('Tempo de execução: ' + minutos + ' minuto(s) e ' + segundos + ' segundo(s)');
  var htmlOutput = HtmlService.createHtmlOutput(
    '<html>' +
    '<head><base target="_top">' +
    '<style>' +
    'body { font-family: Arial, sans-serif; text-align: center; padding: 20px; }' +
    '.container { display: flex; flex-direction: column; align-items: center; justify-content: center; }' +
    '.image { width: 300px; margin-bottom: 30px; }' +
    '.message { font-size: 16px; margin-bottom: 10px; }' +
    '.time { font-size: 14px; color: #555; margin-bottom: 20px; }' +
    '.button { background-color: #a9a9a9; color: black; border: none; padding: 15px 32px; text-align: center; text-decoration: none; display: inline-block; font-size: 16px; margin: 4px 2px; cursor: pointer; border-radius: 5px; }' +
    '</style>' +
    '</head>' +
    '<body>' +
    '<div class="container">' +
    '<img class="image" src="https://i.imgur.com/1N7brwP.png" alt="Certinho">' +
    '<div class="message">Fluxo anual e mensal segregado com sucesso!</div>' +
    '<div class="time">Tempo de execução: ' + minutos + ' minuto(s) e ' + segundos + ' segundo(s)</div>' +
    '<button class="button" onclick="google.script.host.close()">Estou ciente!</button>' +
    '</div>' +
    '</body>' +
    '</html>'
  ).setWidth(400).setHeight(250);

  SpreadsheetApp.getUi().showSidebar(htmlOutput);
}
